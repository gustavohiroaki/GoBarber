[{"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\index.tsx":"1","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\routes\\index.tsx":"2","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\routes\\Route.tsx":"3","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Signup\\index.tsx":"4","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ResetPassword\\index.tsx":"5","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\utils\\getValidationErrors.ts":"6","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ResetPassword\\styles.ts":"7","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Input\\index.tsx":"8","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Button\\styles.tsx":"9","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Tooltip\\styles.ts":"10","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Dashboard\\index.tsx":"11","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Dashboard\\styles.ts":"12","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\styles\\global.ts":"13","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\hooks\\auth.tsx":"14","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ForgotPassword\\index.tsx":"15","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Signup\\styles.ts":"16","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\ToastContainer\\index.tsx":"17","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\ToastContainer\\Toast\\index.tsx":"18"},{"size":198,"mtime":1610538821056,"results":"19","hashOfConfig":"20"},{"size":755,"mtime":1612524734966,"results":"21","hashOfConfig":"20"},{"size":841,"mtime":1610712147374,"results":"22","hashOfConfig":"20"},{"size":2959,"mtime":1610715813004,"results":"23","hashOfConfig":"20"},{"size":3057,"mtime":1612524734966,"results":"24","hashOfConfig":"20"},{"size":367,"mtime":1610623252573,"results":"25","hashOfConfig":"20"},{"size":1571,"mtime":1612524734966,"results":"26","hashOfConfig":"20"},{"size":1656,"mtime":1610623252567,"results":"27","hashOfConfig":"20"},{"size":381,"mtime":1610538878198,"results":"28","hashOfConfig":"20"},{"size":888,"mtime":1610623252569,"results":"29","hashOfConfig":"20"},{"size":2668,"mtime":1612535419893,"results":"30","hashOfConfig":"20"},{"size":3099,"mtime":1612535354678,"results":"31","hashOfConfig":"20"},{"size":483,"mtime":1610537726297,"results":"32","hashOfConfig":"20"},{"size":1774,"mtime":1612524734966,"results":"33","hashOfConfig":"20"},{"size":2960,"mtime":1612524734966,"results":"34","hashOfConfig":"20"},{"size":1572,"mtime":1610712147374,"results":"35","hashOfConfig":"20"},{"size":781,"mtime":1610712147374,"results":"36","hashOfConfig":"20"},{"size":1180,"mtime":1612468598694,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bxgbu7",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\index.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\routes\\index.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\routes\\Route.tsx",[],["77","78","79","80","81"],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Signup\\index.tsx",["82"],"import React, { useCallback, useRef } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiMail, FiLock, FiUser, FiArrowLeft } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport api from '../../services/api';\nimport { useToast } from '../../hooks/toast';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background, AnimationContainer } from './styles';\n\ninterface SignUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SignUpFormData) => {\n      formRef.current?.setErrors({});\n      try {\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('E-Mail obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().min(6, 'Senha no mínimo 6 dígitos'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post('/users', data);\n\n        addToast({\n          type: 'success',\n          title: 'Cadastro realizado com sucesso!',\n          description: 'Você já pode fazer seu logon no GoBarber!',\n        });\n\n        history.push('/');\n      } catch (err) {\n        console.log(err.inner);\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro no cadastro.',\n          description: 'Ocorreu um erro ao fazer cadastro, tente novamente.',\n        });\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"GoBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu Cadastro</h1>\n\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-Mail\" />\n\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\">Cadastrar</Button>\n\n            <a href=\"forgot\">Esqueci minha senha</a>\n\n            <Link to=\"/\">\n              <FiArrowLeft />\n              Voltar para Logon\n            </Link>\n          </Form>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ResetPassword\\index.tsx",["83"],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\utils\\getValidationErrors.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ResetPassword\\styles.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Input\\index.tsx",["84"],"import React, {\r\n  InputHTMLAttributes,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n} from 'react';\r\nimport { useField } from '@unform/core';\r\nimport { IconBaseProps } from 'react-icons';\r\nimport { FiAlertCircle } from 'react-icons/fi';\r\n\r\nimport { Container, Error } from './styles';\r\nimport Tooltip from '../Tooltip';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  icon: React.ComponentType<IconBaseProps>;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isFilled, setIsFilled] = useState(false);\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const { fieldName, defaultValue, error, registerField } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  const handleInputBlur = useCallback(() => {\r\n    setIsFocused(false);\r\n    setIsFilled(!!inputRef.current?.value);\r\n  }, []);\r\n\r\n  const handleInputFocus = useCallback(() => {\r\n    setIsFocused(true);\r\n  }, []);\r\n\r\n  return (\r\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\r\n      {Icon && <Icon size={20} />}\r\n      <input\r\n        onFocus={handleInputFocus}\r\n        onBlur={handleInputBlur}\r\n        defaultValue={defaultValue}\r\n        ref={inputRef}\r\n        {...rest}\r\n      />\r\n\r\n      {error && (\r\n        <Error title={error}>\r\n          <FiAlertCircle color=\"#c53030\" size={20} />\r\n        </Error>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Button\\styles.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Tooltip\\styles.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Dashboard\\index.tsx",["85","86"],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\styles\\global.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\hooks\\auth.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ForgotPassword\\index.tsx",["87","88"],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Signup\\styles.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\ToastContainer\\Toast\\index.tsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":57,"column":9,"nodeType":"101","messageId":"102","endLine":57,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":60,"column":9,"nodeType":"101","messageId":"102","endLine":60,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":13,"column":8,"nodeType":"105","messageId":"106","endLine":13,"endColumn":15},{"ruleId":"103","severity":1,"message":"107","line":21,"column":10,"nodeType":"105","messageId":"106","endLine":21,"endColumn":22},{"ruleId":"103","severity":1,"message":"108","line":21,"column":24,"nodeType":"105","messageId":"106","endLine":21,"endColumn":39},{"ruleId":"103","severity":1,"message":"109","line":30,"column":9,"nodeType":"105","messageId":"106","endLine":30,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":59,"column":9,"nodeType":"101","messageId":"102","endLine":59,"endColumn":20},"lines-around-directive",["110"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar","'selectedDate' is assigned a value but never used.","'setSelectedDate' is assigned a value but never used.","'history' is assigned a value but never used.","padding-line-between-statements"]