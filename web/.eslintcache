[{"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\index.tsx":"1","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\routes\\index.tsx":"2","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\routes\\Route.tsx":"3","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Signup\\index.tsx":"4","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ResetPassword\\index.tsx":"5","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\utils\\getValidationErrors.ts":"6","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ResetPassword\\styles.ts":"7","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Input\\index.tsx":"8","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Button\\styles.tsx":"9","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Tooltip\\styles.ts":"10","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Dashboard\\index.tsx":"11","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Dashboard\\styles.ts":"12","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\styles\\global.ts":"13","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\hooks\\auth.tsx":"14","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ForgotPassword\\index.tsx":"15","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Signup\\styles.ts":"16","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\ToastContainer\\index.tsx":"17","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\ToastContainer\\Toast\\index.tsx":"18","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\hooks\\toast.tsx":"19","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Tooltip\\index.tsx":"20","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\hooks\\index.tsx":"21","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ForgotPassword\\styles.ts":"22","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Input\\styles.tsx":"23","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\services\\api.ts":"24"},{"size":198,"mtime":1610538821056,"results":"25","hashOfConfig":"26"},{"size":755,"mtime":1612524734966,"results":"27","hashOfConfig":"26"},{"size":841,"mtime":1610712147374,"results":"28","hashOfConfig":"26"},{"size":2959,"mtime":1610715813004,"results":"29","hashOfConfig":"26"},{"size":3057,"mtime":1612524734966,"results":"30","hashOfConfig":"26"},{"size":367,"mtime":1610623252573,"results":"31","hashOfConfig":"26"},{"size":1571,"mtime":1612524734966,"results":"32","hashOfConfig":"26"},{"size":1656,"mtime":1610623252567,"results":"33","hashOfConfig":"26"},{"size":381,"mtime":1610538878198,"results":"34","hashOfConfig":"26"},{"size":888,"mtime":1610623252569,"results":"35","hashOfConfig":"26"},{"size":5813,"mtime":1612555578785,"results":"36","hashOfConfig":"37"},{"size":4505,"mtime":1612536255669,"results":"38","hashOfConfig":"26"},{"size":483,"mtime":1610537726297,"results":"39","hashOfConfig":"26"},{"size":1825,"mtime":1612551868523,"results":"40","hashOfConfig":"26"},{"size":2960,"mtime":1612524734966,"results":"41","hashOfConfig":"26"},{"size":1572,"mtime":1610712147374,"results":"42","hashOfConfig":"26"},{"size":781,"mtime":1610712147374,"results":"43","hashOfConfig":"26"},{"size":1180,"mtime":1612468598694,"results":"44","hashOfConfig":"26"},{"size":1459,"mtime":1610712147374,"results":"45","hashOfConfig":"26"},{"size":374,"mtime":1610623252569,"results":"46","hashOfConfig":"26"},{"size":272,"mtime":1610655320111,"results":"47","hashOfConfig":"26"},{"size":1571,"mtime":1612465022071,"results":"48","hashOfConfig":"26"},{"size":1201,"mtime":1610623252568,"results":"49","hashOfConfig":"26"},{"size":116,"mtime":1610632426910,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bxgbu7",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8caicr",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\index.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\routes\\index.tsx",[],["106","107","108","109","110"],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\routes\\Route.tsx",[],["111","112","113","114","115"],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Signup\\index.tsx",["116"],"import React, { useCallback, useRef } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiMail, FiLock, FiUser, FiArrowLeft } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport api from '../../services/api';\nimport { useToast } from '../../hooks/toast';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background, AnimationContainer } from './styles';\n\ninterface SignUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SignUpFormData) => {\n      formRef.current?.setErrors({});\n      try {\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('E-Mail obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().min(6, 'Senha no mínimo 6 dígitos'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post('/users', data);\n\n        addToast({\n          type: 'success',\n          title: 'Cadastro realizado com sucesso!',\n          description: 'Você já pode fazer seu logon no GoBarber!',\n        });\n\n        history.push('/');\n      } catch (err) {\n        console.log(err.inner);\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro no cadastro.',\n          description: 'Ocorreu um erro ao fazer cadastro, tente novamente.',\n        });\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"GoBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu Cadastro</h1>\n\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-Mail\" />\n\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\">Cadastrar</Button>\n\n            <a href=\"forgot\">Esqueci minha senha</a>\n\n            <Link to=\"/\">\n              <FiArrowLeft />\n              Voltar para Logon\n            </Link>\n          </Form>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ResetPassword\\index.tsx",["117"],"import React, { useRef, useCallback } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\n\r\nimport { FiLock } from 'react-icons/fi';\r\nimport logoImg from '../../assets/logo.svg';\r\n\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\n\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\n\r\nimport { useToast } from '../../hooks/toast';\r\n\r\nimport { Container, Content, Background, AnimationContainer } from './styles';\r\nimport api from '../../services/api';\r\n\r\ninterface ResetPasswordFormData {\r\n  password: string;\r\n  password_confirmation: string;\r\n}\r\n\r\nconst SignIn: React.FC = () => {\r\n  const { addToast } = useToast();\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: ResetPasswordFormData) => {\r\n      formRef.current?.setErrors({});\r\n      try {\r\n        const schema = Yup.object().shape({\r\n          password: Yup.string().required('Senha obrigatória'),\r\n          password_confirmation: Yup.string().oneOf(\r\n            [Yup.ref('password'), null],\r\n            'Confirmação incorreta',\r\n          ),\r\n        });\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        const token = location.search.replace('?token=', '');\r\n\r\n        if (!token) throw new Error();\r\n\r\n        await api.post('/passwords/reset', {\r\n          password: data.password,\r\n          password_confirmation: data.password_confirmation,\r\n          token,\r\n        });\r\n\r\n        history.push('/');\r\n      } catch (err) {\r\n        console.log(err.inner);\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n\r\n          formRef.current?.setErrors(errors);\r\n          return;\r\n        }\r\n\r\n        // Disparar um toast\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro ao resetar a senha',\r\n          description:\r\n            'Ocorreu um erro ao resetar a sua senha, tente novamente',\r\n        });\r\n      }\r\n    },\r\n    [addToast, history, location],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <AnimationContainer>\r\n          <img src={logoImg} alt=\"GoBarber\" />\r\n\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Resetar senha</h1>\r\n\r\n            <Input\r\n              name=\"password\"\r\n              icon={FiLock}\r\n              type=\"password\"\r\n              placeholder=\"Nova Senha\"\r\n            />\r\n\r\n            <Input\r\n              name=\"password_confirmation\"\r\n              icon={FiLock}\r\n              type=\"password\"\r\n              placeholder=\"Confirmação da Senha\"\r\n            />\r\n\r\n            <Button type=\"submit\">Alterar senha</Button>\r\n          </Form>\r\n        </AnimationContainer>\r\n      </Content>\r\n      <Background />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n",["118","119","120","121","122"],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\utils\\getValidationErrors.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ResetPassword\\styles.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Input\\index.tsx",["123"],"import React, {\r\n  InputHTMLAttributes,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n} from 'react';\r\nimport { useField } from '@unform/core';\r\nimport { IconBaseProps } from 'react-icons';\r\nimport { FiAlertCircle } from 'react-icons/fi';\r\n\r\nimport { Container, Error } from './styles';\r\nimport Tooltip from '../Tooltip';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  icon: React.ComponentType<IconBaseProps>;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isFilled, setIsFilled] = useState(false);\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const { fieldName, defaultValue, error, registerField } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  const handleInputBlur = useCallback(() => {\r\n    setIsFocused(false);\r\n    setIsFilled(!!inputRef.current?.value);\r\n  }, []);\r\n\r\n  const handleInputFocus = useCallback(() => {\r\n    setIsFocused(true);\r\n  }, []);\r\n\r\n  return (\r\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\r\n      {Icon && <Icon size={20} />}\r\n      <input\r\n        onFocus={handleInputFocus}\r\n        onBlur={handleInputBlur}\r\n        defaultValue={defaultValue}\r\n        ref={inputRef}\r\n        {...rest}\r\n      />\r\n\r\n      {error && (\r\n        <Error title={error}>\r\n          <FiAlertCircle color=\"#c53030\" size={20} />\r\n        </Error>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n",["124","125","126","127","128"],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Button\\styles.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Tooltip\\styles.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Dashboard\\index.tsx",["129","130"],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\styles\\global.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\hooks\\auth.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ForgotPassword\\index.tsx",["131","132"],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\Signup\\styles.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\hooks\\toast.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Tooltip\\index.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\hooks\\index.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\pages\\ForgotPassword\\styles.ts",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\components\\Input\\styles.tsx",[],"C:\\Users\\gustavo.hiroaki\\Documents\\Projects\\GoStack\\GoBarber\\web\\src\\services\\api.ts",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"133","replacedBy":"143"},{"ruleId":"135","replacedBy":"144"},{"ruleId":"137","replacedBy":"145"},{"ruleId":"139","replacedBy":"146"},{"ruleId":"141","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":57,"column":9,"nodeType":"150","messageId":"151","endLine":57,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":60,"column":9,"nodeType":"150","messageId":"151","endLine":60,"endColumn":20},{"ruleId":"133","replacedBy":"152"},{"ruleId":"135","replacedBy":"153"},{"ruleId":"137","replacedBy":"154"},{"ruleId":"139","replacedBy":"155"},{"ruleId":"141","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":13,"column":8,"nodeType":"159","messageId":"160","endLine":13,"endColumn":15},{"ruleId":"133","replacedBy":"161"},{"ruleId":"135","replacedBy":"162"},{"ruleId":"137","replacedBy":"163"},{"ruleId":"139","replacedBy":"164"},{"ruleId":"141","replacedBy":"165"},{"ruleId":"157","severity":1,"message":"166","line":47,"column":10,"nodeType":"159","messageId":"160","endLine":47,"endColumn":22},{"ruleId":"148","severity":1,"message":"149","line":86,"column":9,"nodeType":"150","messageId":"151","endLine":86,"endColumn":20},{"ruleId":"157","severity":1,"message":"167","line":30,"column":9,"nodeType":"159","messageId":"160","endLine":30,"endColumn":16},{"ruleId":"148","severity":1,"message":"149","line":59,"column":9,"nodeType":"150","messageId":"151","endLine":59,"endColumn":20},"lines-around-directive",["168"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["168"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected",["168"],[],[],[],[],"@typescript-eslint/no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar",["168"],[],[],[],[],"'appointments' is assigned a value but never used.","'history' is assigned a value but never used.","padding-line-between-statements"]